{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","tasklist","task","itemlist","count","handleInput","bind","addTask","e","this","setState","target","value","concat","console","log","populateList","templist","map","item","id","onChange","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA4DeA,E,kDAxDf,aACC,IAAD,8BACE,gBACKC,MAAM,CACTC,SAAS,GACTC,KAAK,GACLC,SAAS,GACTC,MAAM,GAER,EAAKC,YAAY,EAAKA,YAAYC,KAAjB,gBACjB,EAAKC,QAAQ,EAAKA,QAAQD,KAAb,gBATf,E,+CAYA,SAAYE,GAAGC,KAAKC,SAAS,CAACR,KAAKM,EAAEG,OAAOC,U,qBAG5C,WAEGH,KAAKT,MAAMC,SAASQ,KAAKT,MAAMC,SAASY,OAAOJ,KAAKT,MAAME,MAE3DY,QAAQC,IAAIN,KAAKT,MAAMC,UAEzBQ,KAAKO,iB,0BAKL,WAEE,IAAIC,EAASR,KAAKT,MAAMC,SAASiB,KAAI,SAACC,GACrC,OAAO,oBAAIC,GAAG,MAAP,SAAcD,OAIrBV,KAAKC,SAAS,CAACP,SAASc,M,oBAK3B,WACE,OACE,gCACE,sBAAKG,GAAG,SAAR,UACA,uBAAOA,GAAG,MAAMC,SAAUZ,KAAKJ,cAC/B,wBAAQe,GAAG,MAAME,QAASb,KAAKF,QAA/B,oBAGI,oBAAIa,GAAG,OAAP,uBACA,qBAAKA,GAAG,QAAR,SACLX,KAAKT,MAAMG,kB,GAlDEoB,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9850caf0.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\n\nclass App extends React.Component{\nconstructor()\n{\n  super();\n  this.state={\n    tasklist:[],\n    task:'',\n    itemlist:[],\n    count:0\n  }\n  this.handleInput=this.handleInput.bind(this);\n  this.addTask=this.addTask.bind(this);\n  \n}\nhandleInput(e){this.setState({task:e.target.value})\n\n}\naddTask(){\n \n   this.state.tasklist=this.state.tasklist.concat(this.state.task);\n  \n  console.log(this.state.tasklist);\n  \nthis.populateList();\n\n}\n\n\npopulateList(){\n  \n  var templist=this.state.tasklist.map((item)=>{\n   return <h3 id='myh'>{item} \n  \n  </h3>\n  });\n   this.setState({itemlist:templist})\n   \n\n  }\n\nrender(){\n  return(\n    <div>\n      <div id='inpbtn'>\n      <input id=\"inp\" onChange={this.handleInput}/>\n      <button id='btn' onClick={this.addTask}>Add</button>\n      </div>\n       \n          <h1 id='myh1'>ToDo List</h1>\n          <div id='mydiv'>\n    {this.state.itemlist}\n    </div>\n       \n      </div>\n  )\n}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}